{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar _jsxFileName = \"/home/simos/tutorials/NextJS/bitzprice/pages/index.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport fetch from \"isomorphic-unfetch\";\nimport Layout from \"../components/Layout\";\nimport Prices from \"../components/Prices\";\n\nvar Index = function Index(_ref) {\n  var bpi = _ref.bpi;\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, \"Welcome to BitzPrice!\"), __jsx(Prices, {\n    bpi: bpi,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }));\n};\n\nIndex.getInitialProps = function _callee() {\n  var res, data;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(fetch(\"https://api.coindesk.com/v1/bpi/currentprice.json\"));\n\n        case 2:\n          res = _context.sent;\n          _context.next = 5;\n          return _regeneratorRuntime.awrap(res.json());\n\n        case 5:\n          data = _context.sent;\n          return _context.abrupt(\"return\", {\n            bpi: data\n          });\n\n        case 7:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default Index;","map":{"version":3,"sources":["/home/simos/tutorials/NextJS/bitzprice/pages/index.tsx"],"names":["fetch","Layout","Prices","Index","bpi","getInitialProps","res","json","data"],"mappings":";;;;AACA,OAAOA,KAAP,MAAkB,oBAAlB;AAEA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;;AAMA,IAAMC,KAAuB,GAAG,SAA1BA,KAA0B,OAAa;AAAA,MAAVC,GAAU,QAAVA,GAAU;AAC3C,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADF,EAEE,MAAC,MAAD;AAAQ,IAAA,GAAG,EAAEA,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAMD,CAPD;;AASAD,KAAK,CAACE,eAAN,GAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACJL,KAAK,CAAC,mDAAD,CADD;;AAAA;AAChBM,UAAAA,GADgB;AAAA;AAAA,2CAEHA,GAAG,CAACC,IAAJ,EAFG;;AAAA;AAEhBC,UAAAA,IAFgB;AAAA,2CAIf;AACLJ,YAAAA,GAAG,EAAEI;AADA,WAJe;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAxB;;AASA,eAAeL,KAAf","sourcesContent":["import { NextPage } from \"next\";\nimport fetch from \"isomorphic-unfetch\";\n\nimport Layout from \"../components/Layout\";\nimport Prices from \"../components/Prices\";\n\ninterface IIndex {\n  bpi: any;\n}\n\nconst Index: NextPage<IIndex> = ({ bpi }) => {\n  return (\n    <Layout>\n      <h1>Welcome to BitzPrice!</h1>\n      <Prices bpi={bpi} />\n    </Layout>\n  );\n};\n\nIndex.getInitialProps = async function() {\n  const res = await fetch(\"https://api.coindesk.com/v1/bpi/currentprice.json\");\n  const data = await res.json();\n\n  return {\n    bpi: data\n  };\n};\n\nexport default Index;\n"]},"metadata":{},"sourceType":"module"}